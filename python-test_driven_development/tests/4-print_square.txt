#IMPORT MODULE#
>>> print_square = __import__('4-print_square').print_square

#Passing Any Type#

test #0: passing string

>>> print_square("Hi")
Traceback (most recent call last):
TypeError: size must be an integer

test #1: none arguments

>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'

test #2: None Type argument

>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer

test #3: NaN test

>>> print_square(float("NaN"))
Traceback (most recent call last):
TypeError: size must be an integer

test #4: list type argument

>>> print_square([1, 2])
Traceback (most recent call last):
TypeError: size must be an integer

test #5: inf integer argument

>>> print_square(1e9999)
Traceback (most recent call last):
TypeError: size must be an integer

#Functional Tests#

test #6: 1 * 1 size

>>> print_square(1)
#

test #7: (3 + 3) * (3 + 3) size

>>> print_square(3 + 3)
######
######
######
######
######
######

test #8: negative int

>>> print_square(-6)
Traceback (most recent call last):
ValueError: size must be >= 0
