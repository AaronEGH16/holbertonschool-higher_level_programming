#IMPORT MODULE#
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

#None Values#

test #0: None arguments

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

test #1: None matrix Value

>>> matrix_divided(None, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

test #2: None div Value

>>> matrix_divided([[1, 2], [3, 4]], None)
Traceback (most recent call last):
TypeError: div must be a number

#Type Errors#

test #3: simple list

>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

test #4: not list integers elements

>>> matrix_divided([["Hola", (1, 2), [3, 4]], [None, float("NaN"), True]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

test #5: not integer div

>>> matrix_divided([[1, 2], [3, 4]], "Hola")
Traceback (most recent call last):
TypeError: div must be a number

test #6: diferent len of rows

>>> matrix_divided([[1, 2, 3], [4, 5]], 6)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

#Type of Return Element#

>>> type(matrix_divided([[1, 2], [3, 4]], 5))
<class 'list'>
